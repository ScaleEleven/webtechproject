CREATE DATABASE IF NOT EXISTS Project;

USE Project;

CREATE TABLE University(
University_ID 	INTEGER PRIMARY KEY AUTO_INCREMENT,
Name			VARCHAR(250)
);

CREATE TABLE Rating(
Rating_ID		INTEGER PRIMARY KEY AUTO_INCREMENT,
Interest		INTEGER,
Coverage		INTEGER,
Materials		INTEGER,
Support			INTEGER,
Workload		INTEGER,
Usefulness		INTEGER,
Difficulty		INTEGER
);

CREATE TABLE Professor(
Professor_ID	INTEGER PRIMARY KEY AUTO_INCREMENT,
Rating_ID		INTEGER,
University_ID	INTEGER,
Name			VARCHAR(250),

INDEX (Rating_ID),
INDEX (University_ID),

FOREIGN KEY (Rating_ID)	REFERENCES Rating(Rating_ID) ON DELETE CASCADE,
FOREIGN KEY (University_ID) REFERENCES University(University_ID) ON DELETE CASCADE
);

CREATE TABLE Comments(
Comments_ID		INTEGER PRIMARY KEY AUTO_INCREMENT,
Text			VARCHAR(500)
);

CREATE TABLE Lecture(
Lecture_ID		INTEGER PRIMARY KEY AUTO_INCREMENT,
Rating_ID		INTEGER,

INDEX (Rating_ID),
FOREIGN KEY (Rating_ID) REFERENCES Rating(Rating_ID) ON DELETE CASCADE
);

CREATE TABLE Exam(
Exam_ID			INTEGER PRIMARY KEY AUTO_INCREMENT,
Rating_ID		INTEGER,

INDEX (Rating_ID),
FOREIGN KEY (Rating_ID) REFERENCES Rating(Rating_ID) ON DELETE CASCADE
);

CREATE TABLE Exercise(
Exercise_ID		INTEGER PRIMARY KEY AUTO_INCREMENT,
Rating_ID		INTEGER.

INDEX (Rating_ID),
FOREIGN KEY (Rating_ID) REFERENCES Rating(Rating_ID) ON DELETE CASCADE
);

CREATE TABLE Course(
Course_ID		INTEGER PRIMARY KEY AUTO_INCREMENT,
Exam_ID			INTEGER,
Exercise_ID		INTEGER,
Lecture_ID		INTEGER,
Rating_ID		INTEGER,
Comments_ID		INTEGER,
Name			VARCHAR(250),
Semester		VARCHAR(250),

INDEX (Exam_ID),
INDEX (Exercise_ID),
INDEX (Lecture_ID),
INDEX (Rating_ID),
INDEX (Comments_ID),

FOREIGN KEY (Exam_ID) REFERENCES Exam(Exam_ID) ON DELETE CASCADE,
FOREIGN KEY (Exercise_ID) REFERENCES Exercise(Exercise_ID) ON DELETE CASCADE,
FOREIGN KEY (Lecture_ID) REFERENCES Lecture(Lecture_ID) ON DELETE CASCADE,
FOREIGN KEY (Rating_ID) REFERENCES Rating(Rating_ID) ON DELETE CASCADE,
FOREIGN KEY (Comments_ID) REFERENCES Comments(Comments_ID) ON DELETE CASCADE
);
